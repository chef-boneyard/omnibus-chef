#!/bin/bash
#
# Test you some omnibus client
#
set -e
set -x

# Check whether a command exists - returns 0 if it does, 1 if it does not
exists()
{
  if command -v $1 &>/dev/null
  then
    return 0
  else
    return 1
  fi
}

# copy off the timestamp for fingerprinting before we blow it away later
mv $BUILD_NUMBER/build_timestamp $WORKSPACE/
cd $BUILD_NUMBER

# remove the chef package / clobber the files
# then install the new package
if exists dpkg;
then
    sudo dpkg -P chef || true
    sudo rm -rf /opt/chef/*
    sudo dpkg -i pkg/chef*.deb
elif exists rpm;
then
    sudo rpm -ev chef || true
    sudo rm -rf /opt/chef/*
    sudo rpm -Uvh pkg/chef*.rpm
elif exists pkgadd;
then
    cat <<EOF > /tmp/nocheck
conflict=nocheck
action=nocheck
EOF
    sudo pkgrm -a /tmp/nocheck -n chef || true
    # BUGBUG: we have to do this twice because the postrm fails the first time
    sudo pkgrm -a /tmp/nocheck -n chef || true
    sudo rm -rf /opt/chef/*
    # BUGBUG: we don't remove symlinks correctly so the install fails the next time
    sudo pkgadd -n -d pkg/chef*.solaris -a /tmp/nocheck chef || true
else # makeself installer
    sudo rm  -rf /opt/chef/*
    # BUGBUG: without an uninstaller the makeself installer fails when creating symlinks
    sudo ./pkg/chef*.sh || true
fi

# we test using the specs packaged in the gem
cd /opt/chef/embedded/lib/ruby/gems/1.9.1/gems/chef-[0-9]*

# test against the rspec and gems in the omnibus build
export PATH=/opt/chef/bin:/opt/chef/embedded/bin:$PATH

# we do not bundle exec here in order to test against gems in the omnibus build
sudo env PATH=$PATH TERM=xterm rspec -r rspec_junit_formatter -f RspecJunitFormatter -o $WORKSPACE/test.xml -f documentation spec

# clean up the workspace to save disk space
cd $WORKSPACE
rm -rf $BUILD_NUMBER
