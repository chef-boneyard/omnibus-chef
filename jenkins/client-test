#!/bin/sh
# WARNING: REQUIRES /bin/sh
#
# - must run on /bin/sh on solaris 9
# - must run on /bin/sh on AIX 6.x
# - if you think you are a bash wizard, you probably do not understand
#   this programming language.  do not touch.
# - if you are under 40, get peer review from your elders.
#
# Test you some omnibus client
#
set -e
set -x

# SmartOS builds in /opt/local instead
is_smartos() {
  uname -v | grep "^joyent" 2>&1 >/dev/null
}

if is_smartos; then
    PREFIX="/opt/local"
else
    PREFIX="/usr"
fi

# copy off the timestamp for fingerprinting before we blow it away later
mv $BUILD_NUMBER/build_timestamp $WORKSPACE/
cd $BUILD_NUMBER

# determine install method via the package suffix
if test -n "`ls pkg/chef*.deb 2>/dev/null || true`"; then
  package_file=`ls pkg/chef*.deb`
  filetype="deb"
elif test -n "`ls pkg/chef*.rpm 2>/dev/null || true`"; then
  package_file=`ls pkg/chef*.rpm`
  filetype="rpm"
elif test -n "`ls pkg/chef*.solaris 2>/dev/null || true`"; then
  package_file=`ls pkg/chef*.solaris`
  filetype="solaris"
elif test -n "`ls pkg/chef*.bff 2>/dev/null || true`"; then
  package_file=`ls pkg/chef*.bff`
  filetype="bff"
elif test -n "`ls pkg/chef*.sh 2>/dev/null || true`"; then
  package_file=`ls pkg/chef*.sh`
  filetype="sh"
elif test -n "`ls pkg/chef*.pkg 2>/dev/null || true`"; then
  package_file=`ls pkg/chef*.pkg`
  filetype="pkg"
fi

# remove the chef package / clobber the files
case "$filetype" in
  "deb")
    sudo dpkg -P chef || true
    ;;
  "rpm")
    sudo rpm -ev chef || true
    ;;
  "solaris")
    if sudo pkgrm -a /tmp/nocheck -n chef; then
      :
    else
      echo "WARNING: CLEANING UP BROKEN POSTRM FROM PRIOR INSTALLATION!!!!!!!!!!!!!!!!!!!!!!"
      sudo rm -f /var/sadm/pkg/chef/install/postremove || true
      sudo pkgrm -a /tmp/nocheck -n chef || true
    fi
    ;;
  "bff")
    sudo installp -u chef || true
    ;;
  "pkg")
    sudo rm -rf /opt/chef
    sudo pkgutil --forget com.getchef.pkg.chef || true
    ;;
  "sh")
    # intentionally left blank
    ;;
esac

sudo rm -rf /opt/chef/*

# ensure symlinks are gone, so that failures to recreate them get caught
sudo rm -f $PREFIX/bin/chef-client || true
sudo rm -f $PREFIX/bin/chef-solo || true
sudo rm -f $PREFIX/bin/chef-apply || true
sudo rm -f $PREFIX/bin/chef-shell || true
sudo rm -f $PREFIX/bin/knife || true
sudo rm -f $PREFIX/bin/ohai || true


# install the new package
case "$filetype" in
  "deb") sudo dpkg -i pkg/chef*.deb ;;
  "rpm") sudo rpm -Uvh pkg/chef*.rpm ;;
  "solaris") sudo pkgadd -n -d pkg/chef*.solaris -a /tmp/nocheck chef ;;
  "bff") sudo installp -a -d pkg/chef*.bff chef;;
  "sh") sudo ./pkg/chef*.sh ;;
  "pkg") sudo /usr/sbin/installer -pkg pkg/chef*.pkg -target /;;
esac

# sanity check that we're getting symlinks from the pre-install script
if [ ! -L "/usr/bin/chef-client" ]; then
  echo "/usr/bin/chef-client symlink was not installed by pre-install script!"
  exit 1
fi

if [ ! -L "/usr/bin/knife" ]; then
  echo "/usr/bin/knife symlink was not installed by pre-install script!"
  exit 1
fi

if [ ! -L "/usr/bin/chef-solo" ]; then
  echo "/usr/bin/chef-solo symlink was not installed by pre-install script!"
  exit 1
fi

if [ ! -L "/usr/bin/ohai" ]; then
  echo "/usr/bin/ohai symlink was not installed by pre-install script!"
  exit 1
fi

if [ ! -f "/opt/chef/bin/chef-client" ]; then
  echo "/opt/chef/bin/chef-client binary was not installed correctly!"
  exit 1
fi

if [ ! -f "/opt/chef/bin/knife" ]; then
  echo "/opt/chef/bin/knife binary was not installed correctly!"
  exit 1
fi

if [ ! -f "/opt/chef/bin/chef-solo" ]; then
  echo "/opt/chef/bin/chef-solo binary was not installed correctly!"
  exit 1
fi

if [ ! -f "/opt/chef/bin/ohai" ]; then
  echo "/opt/chef/bin/ohai binary was not installed correctly!"
  exit 1
fi

# test against the appbundle'd chef bundle
cd /opt/chef/embedded/apps/chef

# test against the rspec and gems in the omnibus build
PATH=/opt/chef/bin:/opt/chef/embedded/bin:$PATH
export PATH

# ffi-yajl must run in c-extension mode or we take perf hits, so we force it
# before running rspec so that we don't wind up testing the ffi mode
FORCE_FFI_YAJL=ext
export FORCE_FFI_YAJL

# run against the Gemfile.lock in the appbundle'd directory
sudo env PATH=$PATH TERM=xterm bundle exec rspec -r rspec_junit_formatter -f RspecJunitFormatter -o $WORKSPACE/test.xml -f documentation spec

# clean up the workspace to save disk space
cd $WORKSPACE
rm -rf $BUILD_NUMBER

# remove the package, break the build if the postrm fails
case "$filetype" in
  "deb")
    sudo dpkg -P chef
    ;;
  "rpm")
    sudo rpm -ev chef
    ;;
  "solaris")
    sudo pkgrm -a /tmp/nocheck -n chef
    ;;
  "bff")
    sudo installp -u chef
    ;;
  "pkg")
    sudo rm -rf /opt/chef
    sudo pkgutil --forget com.getchef.pkg.chef || true
    ;;
  "sh")
    # intentionally left blank
    ;;
esac
